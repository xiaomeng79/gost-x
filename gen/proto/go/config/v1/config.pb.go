// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: config/v1/config.proto

package configv1

import (
	v1 "github.com/go-gost/x/gen/proto/go/proxy/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 运行状态
type Status_RunStatus int32

const (
	// 运行中
	Status_RUN Status_RunStatus = 0
	// 拨号中
	Status_DIALING Status_RunStatus = 1
	// 拨号成功
	Status_DIALING_SUCCESS Status_RunStatus = 2
	// 等待重启
	Status_PENDIN_REBOOT Status_RunStatus = 3
	// 重启服务
	Status_PENDIN_REBOOT_SERVICE Status_RunStatus = 4
)

// Enum value maps for Status_RunStatus.
var (
	Status_RunStatus_name = map[int32]string{
		0: "RUN",
		1: "DIALING",
		2: "DIALING_SUCCESS",
		3: "PENDIN_REBOOT",
		4: "PENDIN_REBOOT_SERVICE",
	}
	Status_RunStatus_value = map[string]int32{
		"RUN":                   0,
		"DIALING":               1,
		"DIALING_SUCCESS":       2,
		"PENDIN_REBOOT":         3,
		"PENDIN_REBOOT_SERVICE": 4,
	}
)

func (x Status_RunStatus) Enum() *Status_RunStatus {
	p := new(Status_RunStatus)
	*p = x
	return p
}

func (x Status_RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v1_config_proto_enumTypes[0].Descriptor()
}

func (Status_RunStatus) Type() protoreflect.EnumType {
	return &file_config_v1_config_proto_enumTypes[0]
}

func (x Status_RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_RunStatus.Descriptor instead.
func (Status_RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{1, 0}
}

// 更新状态
type Status_UpdateStatus int32

const (
	// 默认
	Status_DEFAULT Status_UpdateStatus = 0
	// 请求中
	Status_REQUEST Status_UpdateStatus = 1
	// 下载中
	Status_DOWNLOADING Status_UpdateStatus = 2
	// 待更新
	Status_PENDIN_UPGRADE Status_UpdateStatus = 3
)

// Enum value maps for Status_UpdateStatus.
var (
	Status_UpdateStatus_name = map[int32]string{
		0: "DEFAULT",
		1: "REQUEST",
		2: "DOWNLOADING",
		3: "PENDIN_UPGRADE",
	}
	Status_UpdateStatus_value = map[string]int32{
		"DEFAULT":        0,
		"REQUEST":        1,
		"DOWNLOADING":    2,
		"PENDIN_UPGRADE": 3,
	}
)

func (x Status_UpdateStatus) Enum() *Status_UpdateStatus {
	p := new(Status_UpdateStatus)
	*p = x
	return p
}

func (x Status_UpdateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_UpdateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_config_v1_config_proto_enumTypes[1].Descriptor()
}

func (Status_UpdateStatus) Type() protoreflect.EnumType {
	return &file_config_v1_config_proto_enumTypes[1]
}

func (x Status_UpdateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_UpdateStatus.Descriptor instead.
func (Status_UpdateStatus) EnumDescriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{1, 1}
}

// 全局配置
type Global struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auth
	Auth *v1.Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	// 服务端地址
	ServerAddr string `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	// 程序配置
	Setting *v1.Setting `protobuf:"bytes,3,opt,name=setting,proto3" json:"setting,omitempty"`
	// 状态
	Status *Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// 客户端信息
	ClientInfo *v1.Client `protobuf:"bytes,5,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	// vps信息
	VpsInfo *v1.Vps `protobuf:"bytes,6,opt,name=vps_info,json=vpsInfo,proto3" json:"vps_info,omitempty"`
	// ip上报信息
	IpInfo *v1.IpInfo `protobuf:"bytes,7,opt,name=ip_info,json=ipInfo,proto3" json:"ip_info,omitempty"`
	// 用户认证信息
	UserAuths []*v1.UserAuth `protobuf:"bytes,8,rep,name=user_auths,json=userAuths,proto3" json:"user_auths,omitempty"`
	// 开启的服务和端口
	ServicePorts []*v1.ServicePort `protobuf:"bytes,9,rep,name=service_ports,json=servicePorts,proto3" json:"service_ports,omitempty"`
}

func (x *Global) Reset() {
	*x = Global{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_v1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Global) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Global) ProtoMessage() {}

func (x *Global) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Global.ProtoReflect.Descriptor instead.
func (*Global) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *Global) GetAuth() *v1.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Global) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *Global) GetSetting() *v1.Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *Global) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Global) GetClientInfo() *v1.Client {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *Global) GetVpsInfo() *v1.Vps {
	if x != nil {
		return x.VpsInfo
	}
	return nil
}

func (x *Global) GetIpInfo() *v1.IpInfo {
	if x != nil {
		return x.IpInfo
	}
	return nil
}

func (x *Global) GetUserAuths() []*v1.UserAuth {
	if x != nil {
		return x.UserAuths
	}
	return nil
}

func (x *Global) GetServicePorts() []*v1.ServicePort {
	if x != nil {
		return x.ServicePorts
	}
	return nil
}

// 状态
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 运行状态
	RunStatus Status_RunStatus `protobuf:"varint,1,opt,name=run_status,json=runStatus,proto3,enum=config.v1.Status_RunStatus" json:"run_status,omitempty"`
	// 更新状态
	UpdateStatus Status_UpdateStatus `protobuf:"varint,2,opt,name=update_status,json=updateStatus,proto3,enum=config.v1.Status_UpdateStatus" json:"update_status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_v1_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetRunStatus() Status_RunStatus {
	if x != nil {
		return x.RunStatus
	}
	return Status_RUN
}

func (x *Status) GetUpdateStatus() Status_UpdateStatus {
	if x != nil {
		return x.UpdateStatus
	}
	return Status_DEFAULT
}

// 时钟同步
type CurrentTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前的时间戳
	Sec int64 `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
}

func (x *CurrentTime) Reset() {
	*x = CurrentTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_v1_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTime) ProtoMessage() {}

func (x *CurrentTime) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTime.ProtoReflect.Descriptor instead.
func (*CurrentTime) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *CurrentTime) GetSec() int64 {
	if x != nil {
		return x.Sec
	}
	return 0
}

var File_config_v1_config_proto protoreflect.FileDescriptor

var file_config_v1_config_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9c, 0x03, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x08,
	0x76, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x70, 0x73, 0x52, 0x07, 0x76,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x22, 0xbe, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x72,
	0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x09,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x44, 0x49, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x5f, 0x52,
	0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x10, 0x04, 0x22, 0x4d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10,
	0x03, 0x22, 0x1f, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x65, 0x63, 0x32, 0xc0, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x70, 0x73, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x00, 0x42, 0x9a, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x6f, 0x73, 0x74, 0x2f, 0x78, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0xf8, 0x01, 0x00, 0xa2,
	0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_v1_config_proto_rawDescOnce sync.Once
	file_config_v1_config_proto_rawDescData = file_config_v1_config_proto_rawDesc
)

func file_config_v1_config_proto_rawDescGZIP() []byte {
	file_config_v1_config_proto_rawDescOnce.Do(func() {
		file_config_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_v1_config_proto_rawDescData)
	})
	return file_config_v1_config_proto_rawDescData
}

var file_config_v1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_v1_config_proto_goTypes = []interface{}{
	(Status_RunStatus)(0),      // 0: config.v1.Status.RunStatus
	(Status_UpdateStatus)(0),   // 1: config.v1.Status.UpdateStatus
	(*Global)(nil),             // 2: config.v1.Global
	(*Status)(nil),             // 3: config.v1.Status
	(*CurrentTime)(nil),        // 4: config.v1.CurrentTime
	(*v1.Auth)(nil),            // 5: proxy.v1.Auth
	(*v1.Setting)(nil),         // 6: proxy.v1.Setting
	(*v1.Client)(nil),          // 7: proxy.v1.Client
	(*v1.Vps)(nil),             // 8: proxy.v1.Vps
	(*v1.IpInfo)(nil),          // 9: proxy.v1.IpInfo
	(*v1.UserAuth)(nil),        // 10: proxy.v1.UserAuth
	(*v1.ServicePort)(nil),     // 11: proxy.v1.ServicePort
	(*emptypb.Empty)(nil),      // 12: google.protobuf.Empty
	(*v1.ClientReq)(nil),       // 13: proxy.v1.ClientReq
	(*v1.UserAuthResp)(nil),    // 14: proxy.v1.UserAuthResp
	(*v1.UserLimiterResp)(nil), // 15: proxy.v1.UserLimiterResp
}
var file_config_v1_config_proto_depIdxs = []int32{
	5,  // 0: config.v1.Global.auth:type_name -> proxy.v1.Auth
	6,  // 1: config.v1.Global.setting:type_name -> proxy.v1.Setting
	3,  // 2: config.v1.Global.status:type_name -> config.v1.Status
	7,  // 3: config.v1.Global.client_info:type_name -> proxy.v1.Client
	8,  // 4: config.v1.Global.vps_info:type_name -> proxy.v1.Vps
	9,  // 5: config.v1.Global.ip_info:type_name -> proxy.v1.IpInfo
	10, // 6: config.v1.Global.user_auths:type_name -> proxy.v1.UserAuth
	11, // 7: config.v1.Global.service_ports:type_name -> proxy.v1.ServicePort
	0,  // 8: config.v1.Status.run_status:type_name -> config.v1.Status.RunStatus
	1,  // 9: config.v1.Status.update_status:type_name -> config.v1.Status.UpdateStatus
	12, // 10: config.v1.ConfigService.GetSetting:input_type -> google.protobuf.Empty
	13, // 11: config.v1.ConfigService.GetClientInfo:input_type -> proxy.v1.ClientReq
	12, // 12: config.v1.ConfigService.GetVpsInfo:input_type -> google.protobuf.Empty
	9,  // 13: config.v1.ConfigService.SetIpInfo:input_type -> proxy.v1.IpInfo
	12, // 14: config.v1.ConfigService.GetUserAuth:input_type -> google.protobuf.Empty
	12, // 15: config.v1.ConfigService.GetUserLimiter:input_type -> google.protobuf.Empty
	12, // 16: config.v1.ConfigService.GetCurrentTime:input_type -> google.protobuf.Empty
	6,  // 17: config.v1.ConfigService.GetSetting:output_type -> proxy.v1.Setting
	7,  // 18: config.v1.ConfigService.GetClientInfo:output_type -> proxy.v1.Client
	8,  // 19: config.v1.ConfigService.GetVpsInfo:output_type -> proxy.v1.Vps
	12, // 20: config.v1.ConfigService.SetIpInfo:output_type -> google.protobuf.Empty
	14, // 21: config.v1.ConfigService.GetUserAuth:output_type -> proxy.v1.UserAuthResp
	15, // 22: config.v1.ConfigService.GetUserLimiter:output_type -> proxy.v1.UserLimiterResp
	4,  // 23: config.v1.ConfigService.GetCurrentTime:output_type -> config.v1.CurrentTime
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_config_v1_config_proto_init() }
func file_config_v1_config_proto_init() {
	if File_config_v1_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_v1_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Global); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_v1_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_v1_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_v1_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_v1_config_proto_goTypes,
		DependencyIndexes: file_config_v1_config_proto_depIdxs,
		EnumInfos:         file_config_v1_config_proto_enumTypes,
		MessageInfos:      file_config_v1_config_proto_msgTypes,
	}.Build()
	File_config_v1_config_proto = out.File
	file_config_v1_config_proto_rawDesc = nil
	file_config_v1_config_proto_goTypes = nil
	file_config_v1_config_proto_depIdxs = nil
}
