// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proxy/v1/vps.proto

package proxyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auth认证
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auth
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_vps_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_vps_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_proxy_v1_vps_proto_rawDescGZIP(), []int{0}
}

func (x *Auth) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Auth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 主机信息
type HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主机名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_vps_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_vps_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_proxy_v1_vps_proto_rawDescGZIP(), []int{1}
}

func (x *HostInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VPS
type Vps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 密码
	// @gotags: db:"password"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty" db:"password"`
	// 池子id
	// @gotags: db:"pool_id"
	PoolId int64 `protobuf:"varint,3,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty" db:"pool_id"`
	// 连接地址
	// @gotags: db:"telnet_address"
	TelnetAddress string `protobuf:"bytes,4,opt,name=telnet_address,json=telnetAddress,proto3" json:"telnet_address,omitempty" db:"telnet_address"`
	// 连接账号
	// @gotags: db:"telnet_account"
	TelnetAccount string `protobuf:"bytes,5,opt,name=telnet_account,json=telnetAccount,proto3" json:"telnet_account,omitempty" db:"telnet_account"`
	// 连接密码
	// @gotags: db:"telnet_password"
	TelnetPassword string `protobuf:"bytes,6,opt,name=telnet_password,json=telnetPassword,proto3" json:"telnet_password,omitempty" db:"telnet_password"`
	// 驱动名称
	// @gotags: db:"device_name"
	DeviceName string `protobuf:"bytes,7,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty" db:"device_name"`
	// 宽带账号
	// @gotags: db:"broadband_account"
	BroadbandAccount string `protobuf:"bytes,8,opt,name=broadband_account,json=broadbandAccount,proto3" json:"broadband_account,omitempty" db:"broadband_account"`
	// 宽带密码
	// @gotags: db:"broadband_password"
	BroadbandPassword string `protobuf:"bytes,9,opt,name=broadband_password,json=broadbandPassword,proto3" json:"broadband_password,omitempty" db:"broadband_password"`
}

func (x *Vps) Reset() {
	*x = Vps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_vps_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vps) ProtoMessage() {}

func (x *Vps) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_vps_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vps.ProtoReflect.Descriptor instead.
func (*Vps) Descriptor() ([]byte, []int) {
	return file_proxy_v1_vps_proto_rawDescGZIP(), []int{2}
}

func (x *Vps) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Vps) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Vps) GetPoolId() int64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *Vps) GetTelnetAddress() string {
	if x != nil {
		return x.TelnetAddress
	}
	return ""
}

func (x *Vps) GetTelnetAccount() string {
	if x != nil {
		return x.TelnetAccount
	}
	return ""
}

func (x *Vps) GetTelnetPassword() string {
	if x != nil {
		return x.TelnetPassword
	}
	return ""
}

func (x *Vps) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Vps) GetBroadbandAccount() string {
	if x != nil {
		return x.BroadbandAccount
	}
	return ""
}

func (x *Vps) GetBroadbandPassword() string {
	if x != nil {
		return x.BroadbandPassword
	}
	return ""
}

var File_proxy_v1_vps_proto protoreflect.FileDescriptor

var file_proxy_v1_vps_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x70, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x15,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1e, 0x0a, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x03, 0x56, 0x70,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x65, 0x6c, 0x6e, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x62, 0x61, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61,
	0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x90, 0x01, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x56, 0x70, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x6f, 0x73, 0x74, 0x2f, 0x78, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x76, 0x31, 0xf8, 0x01, 0x00, 0xa2, 0x02,
	0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_v1_vps_proto_rawDescOnce sync.Once
	file_proxy_v1_vps_proto_rawDescData = file_proxy_v1_vps_proto_rawDesc
)

func file_proxy_v1_vps_proto_rawDescGZIP() []byte {
	file_proxy_v1_vps_proto_rawDescOnce.Do(func() {
		file_proxy_v1_vps_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_v1_vps_proto_rawDescData)
	})
	return file_proxy_v1_vps_proto_rawDescData
}

var file_proxy_v1_vps_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proxy_v1_vps_proto_goTypes = []interface{}{
	(*Auth)(nil),     // 0: proxy.v1.Auth
	(*HostInfo)(nil), // 1: proxy.v1.HostInfo
	(*Vps)(nil),      // 2: proxy.v1.Vps
}
var file_proxy_v1_vps_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proxy_v1_vps_proto_init() }
func file_proxy_v1_vps_proto_init() {
	if File_proxy_v1_vps_proto != nil {
		return
	}
	file_proxy_v1_client_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proxy_v1_vps_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_v1_vps_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_v1_vps_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_v1_vps_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy_v1_vps_proto_goTypes,
		DependencyIndexes: file_proxy_v1_vps_proto_depIdxs,
		MessageInfos:      file_proxy_v1_vps_proto_msgTypes,
	}.Build()
	File_proxy_v1_vps_proto = out.File
	file_proxy_v1_vps_proto_rawDesc = nil
	file_proxy_v1_vps_proto_goTypes = nil
	file_proxy_v1_vps_proto_depIdxs = nil
}
