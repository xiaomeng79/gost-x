// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proxy/v1/setting.proto

package proxyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 设置类型
type SettingType int32

const (
	// 保留
	SettingType_SETTING_TYPE_DEFAULT SettingType = 0
	// 代理池
	SettingType_SETTING_TYPE_POOL SettingType = 1
	// 代理客户端
	SettingType_SETTING_TYPE_CLIENT SettingType = 2
)

// Enum value maps for SettingType.
var (
	SettingType_name = map[int32]string{
		0: "SETTING_TYPE_DEFAULT",
		1: "SETTING_TYPE_POOL",
		2: "SETTING_TYPE_CLIENT",
	}
	SettingType_value = map[string]int32{
		"SETTING_TYPE_DEFAULT": 0,
		"SETTING_TYPE_POOL":    1,
		"SETTING_TYPE_CLIENT":  2,
	}
)

func (x SettingType) Enum() *SettingType {
	p := new(SettingType)
	*p = x
	return p
}

func (x SettingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettingType) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_v1_setting_proto_enumTypes[0].Descriptor()
}

func (SettingType) Type() protoreflect.EnumType {
	return &file_proxy_v1_setting_proto_enumTypes[0]
}

func (x SettingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettingType.Descriptor instead.
func (SettingType) EnumDescriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{0}
}

// 是否类型
type YesOrNo int32

const (
	// 否
	YesOrNo_NO YesOrNo = 0
	// 是
	YesOrNo_YES YesOrNo = 1
)

// Enum value maps for YesOrNo.
var (
	YesOrNo_name = map[int32]string{
		0: "NO",
		1: "YES",
	}
	YesOrNo_value = map[string]int32{
		"NO":  0,
		"YES": 1,
	}
)

func (x YesOrNo) Enum() *YesOrNo {
	p := new(YesOrNo)
	*p = x
	return p
}

func (x YesOrNo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesOrNo) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_v1_setting_proto_enumTypes[1].Descriptor()
}

func (YesOrNo) Type() protoreflect.EnumType {
	return &file_proxy_v1_setting_proto_enumTypes[1]
}

func (x YesOrNo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesOrNo.Descriptor instead.
func (YesOrNo) EnumDescriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{1}
}

// 节点获取方式
type GetNodeMethod int32

const (
	// 保留
	GetNodeMethod_NODE_GET_DEFAULT GetNodeMethod = 0
	// 固定ip地址，可以是ip范围
	GetNodeMethod_NODE_GET_FIXED GetNodeMethod = 1
	// HTTP请求
	GetNodeMethod_NODE_GET_HTTP GetNodeMethod = 2
)

// Enum value maps for GetNodeMethod.
var (
	GetNodeMethod_name = map[int32]string{
		0: "NODE_GET_DEFAULT",
		1: "NODE_GET_FIXED",
		2: "NODE_GET_HTTP",
	}
	GetNodeMethod_value = map[string]int32{
		"NODE_GET_DEFAULT": 0,
		"NODE_GET_FIXED":   1,
		"NODE_GET_HTTP":    2,
	}
)

func (x GetNodeMethod) Enum() *GetNodeMethod {
	p := new(GetNodeMethod)
	*p = x
	return p
}

func (x GetNodeMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetNodeMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_v1_setting_proto_enumTypes[2].Descriptor()
}

func (GetNodeMethod) Type() protoreflect.EnumType {
	return &file_proxy_v1_setting_proto_enumTypes[2]
}

func (x GetNodeMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetNodeMethod.Descriptor instead.
func (GetNodeMethod) EnumDescriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{2}
}

// 程序设置
type Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 设置id
	// @gotags: db:"setting_type_id"
	SettingTypeId int64 `protobuf:"varint,1,opt,name=setting_type_id,json=settingTypeId,proto3" json:"setting_type_id,omitempty" db:"setting_type_id"`
	// 设置类型
	// @gotags: db:"setting_type"
	SettingType SettingType `protobuf:"varint,2,opt,name=setting_type,json=settingType,proto3,enum=proxy.v1.SettingType" json:"setting_type,omitempty" db:"setting_type"`
	// 拨号间隔，秒
	// @gotags: db:"dialed_interval_time"
	DialedIntervalTime int64 `protobuf:"varint,3,opt,name=dialed_interval_time,json=dialedIntervalTime,proto3" json:"dialed_interval_time,omitempty" db:"dialed_interval_time"`
	// 是否验证
	// @gotags: db:"is_auth"
	IsAuth int32 `protobuf:"varint,4,opt,name=is_auth,json=isAuth,proto3" json:"is_auth,omitempty" db:"is_auth"`
	// 是否IP重复
	// @gotags: db:"is_ip_repeat"
	IsIpRepeat int32 `protobuf:"varint,5,opt,name=is_ip_repeat,json=isIpRepeat,proto3" json:"is_ip_repeat,omitempty" db:"is_ip_repeat"`
	// 是否固定端口
	// @gotags: db:"is_fixed_port"
	IsFixedPort YesOrNo `protobuf:"varint,6,opt,name=is_fixed_port,json=isFixedPort,proto3,enum=proxy.v1.YesOrNo" json:"is_fixed_port,omitempty" db:"is_fixed_port"`
	// 开启的服务 格式：http,socks5
	// @gotags: db:"on_service"
	OnService string `protobuf:"bytes,7,opt,name=on_service,json=onService,proto3" json:"on_service,omitempty" db:"on_service"`
	// 日志服务URL
	// @gotags: db:"log_service_url"
	LogServiceUrl string `protobuf:"bytes,8,opt,name=log_service_url,json=logServiceUrl,proto3" json:"log_service_url,omitempty" db:"log_service_url"`
	// 日志上报条数
	// @gotags: db:"log_report_num"
	LogReportNum int64 `protobuf:"varint,9,opt,name=log_report_num,json=logReportNum,proto3" json:"log_report_num,omitempty" db:"log_report_num"`
	// 服务的端口，开启固定端口生效 格式：http:8080,socks5:8091
	// @gotags: db:"service_port"
	ServicePort string `protobuf:"bytes,10,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty" db:"service_port"`
	// 超时时间，秒
	// @gotags: db:"timeout_control"
	TimeoutControl int64 `protobuf:"varint,11,opt,name=timeout_control,json=timeoutControl,proto3" json:"timeout_control,omitempty" db:"timeout_control"`
	// 总限流，0：不限制
	// @gotags: db:"total_limit"
	TotalLimit int64 `protobuf:"varint,12,opt,name=total_limit,json=totalLimit,proto3" json:"total_limit,omitempty" db:"total_limit"`
	// ip限流，0：不限制
	// @gotags: db:"ip_limit"
	IpLimit int64 `protobuf:"varint,13,opt,name=ip_limit,json=ipLimit,proto3" json:"ip_limit,omitempty" db:"ip_limit"`
	// 域名
	// @gotags: db:"domain"
	Domain string `protobuf:"bytes,14,opt,name=domain,proto3" json:"domain,omitempty" db:"domain"`
	// 特殊配置
	// @gotags: db:"special_conf"
	SpecialConf string `protobuf:"bytes,15,opt,name=special_conf,json=specialConf,proto3" json:"special_conf,omitempty" db:"special_conf"`
	// 安装路径
	// @gotags: db:"install_path"
	InstallPath string `protobuf:"bytes,16,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty" db:"install_path"`
}

func (x *Setting) Reset() {
	*x = Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_setting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_setting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{0}
}

func (x *Setting) GetSettingTypeId() int64 {
	if x != nil {
		return x.SettingTypeId
	}
	return 0
}

func (x *Setting) GetSettingType() SettingType {
	if x != nil {
		return x.SettingType
	}
	return SettingType_SETTING_TYPE_DEFAULT
}

func (x *Setting) GetDialedIntervalTime() int64 {
	if x != nil {
		return x.DialedIntervalTime
	}
	return 0
}

func (x *Setting) GetIsAuth() int32 {
	if x != nil {
		return x.IsAuth
	}
	return 0
}

func (x *Setting) GetIsIpRepeat() int32 {
	if x != nil {
		return x.IsIpRepeat
	}
	return 0
}

func (x *Setting) GetIsFixedPort() YesOrNo {
	if x != nil {
		return x.IsFixedPort
	}
	return YesOrNo_NO
}

func (x *Setting) GetOnService() string {
	if x != nil {
		return x.OnService
	}
	return ""
}

func (x *Setting) GetLogServiceUrl() string {
	if x != nil {
		return x.LogServiceUrl
	}
	return ""
}

func (x *Setting) GetLogReportNum() int64 {
	if x != nil {
		return x.LogReportNum
	}
	return 0
}

func (x *Setting) GetServicePort() string {
	if x != nil {
		return x.ServicePort
	}
	return ""
}

func (x *Setting) GetTimeoutControl() int64 {
	if x != nil {
		return x.TimeoutControl
	}
	return 0
}

func (x *Setting) GetTotalLimit() int64 {
	if x != nil {
		return x.TotalLimit
	}
	return 0
}

func (x *Setting) GetIpLimit() int64 {
	if x != nil {
		return x.IpLimit
	}
	return 0
}

func (x *Setting) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Setting) GetSpecialConf() string {
	if x != nil {
		return x.SpecialConf
	}
	return ""
}

func (x *Setting) GetInstallPath() string {
	if x != nil {
		return x.InstallPath
	}
	return ""
}

// 特殊配置
type SpecialConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 间隔请求配置，单位秒
	ReloadInterval *ReloadInterval `protobuf:"bytes,1,opt,name=reload_interval,json=reloadInterval,proto3" json:"reload_interval,omitempty"`
	// 隧道代理，节点配置
	GetNode *GetNode `protobuf:"bytes,2,opt,name=get_node,json=getNode,proto3" json:"get_node,omitempty"`
	// 默认用户，用于认证隧道代理
	DefaultUser *UserAuth `protobuf:"bytes,3,opt,name=default_user,json=defaultUser,proto3" json:"default_user,omitempty"`
}

func (x *SpecialConf) Reset() {
	*x = SpecialConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_setting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialConf) ProtoMessage() {}

func (x *SpecialConf) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_setting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialConf.ProtoReflect.Descriptor instead.
func (*SpecialConf) Descriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{1}
}

func (x *SpecialConf) GetReloadInterval() *ReloadInterval {
	if x != nil {
		return x.ReloadInterval
	}
	return nil
}

func (x *SpecialConf) GetGetNode() *GetNode {
	if x != nil {
		return x.GetNode
	}
	return nil
}

func (x *SpecialConf) GetDefaultUser() *UserAuth {
	if x != nil {
		return x.DefaultUser
	}
	return nil
}

// 间隔请求配置，单位秒
type ReloadInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取客户端信息
	// @gotags: default:"60"
	ClientInfo int64 `protobuf:"varint,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty" default:"60"`
	// 获取授权信息
	// @gotags: default:"30"
	UserAuth int64 `protobuf:"varint,2,opt,name=user_auth,json=userAuth,proto3" json:"user_auth,omitempty" default:"30"`
	// 获取用户限流
	// @gotags: default:"45"
	UserLimiter int64 `protobuf:"varint,3,opt,name=user_limiter,json=userLimiter,proto3" json:"user_limiter,omitempty" default:"45"`
	// 获取设置
	// @gotags: default:"60"
	Setting int64 `protobuf:"varint,4,opt,name=setting,proto3" json:"setting,omitempty" default:"60"`
	// 获取转发链
	// @gotags: default:"30"
	Chain int64 `protobuf:"varint,5,opt,name=chain,proto3" json:"chain,omitempty" default:"30"`
	// 获取vps信息
	// @gotags: default:"180"
	VpsInfo int64 `protobuf:"varint,6,opt,name=vps_info,json=vpsInfo,proto3" json:"vps_info,omitempty" default:"180"`
	// 获取重置时间
	// @gotags: default:"300"
	ResetTime int64 `protobuf:"varint,7,opt,name=reset_time,json=resetTime,proto3" json:"reset_time,omitempty" default:"300"`
	// 上报心跳间隔
	// @gotags: default:"30"
	HeartbeatTime int64 `protobuf:"varint,8,opt,name=heartbeat_time,json=heartbeatTime,proto3" json:"heartbeat_time,omitempty" default:"30"`
}

func (x *ReloadInterval) Reset() {
	*x = ReloadInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_setting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadInterval) ProtoMessage() {}

func (x *ReloadInterval) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_setting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadInterval.ProtoReflect.Descriptor instead.
func (*ReloadInterval) Descriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{2}
}

func (x *ReloadInterval) GetClientInfo() int64 {
	if x != nil {
		return x.ClientInfo
	}
	return 0
}

func (x *ReloadInterval) GetUserAuth() int64 {
	if x != nil {
		return x.UserAuth
	}
	return 0
}

func (x *ReloadInterval) GetUserLimiter() int64 {
	if x != nil {
		return x.UserLimiter
	}
	return 0
}

func (x *ReloadInterval) GetSetting() int64 {
	if x != nil {
		return x.Setting
	}
	return 0
}

func (x *ReloadInterval) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *ReloadInterval) GetVpsInfo() int64 {
	if x != nil {
		return x.VpsInfo
	}
	return 0
}

func (x *ReloadInterval) GetResetTime() int64 {
	if x != nil {
		return x.ResetTime
	}
	return 0
}

func (x *ReloadInterval) GetHeartbeatTime() int64 {
	if x != nil {
		return x.HeartbeatTime
	}
	return 0
}

// 隧道代理，节点配置
type GetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取方式
	// @gotags: default:"1"
	GetMethod GetNodeMethod `protobuf:"varint,1,opt,name=get_method,json=getMethod,proto3,enum=proxy.v1.GetNodeMethod" json:"get_method,omitempty" default:"1"`
	// 地址，可以是固定地址 如：http://127.0.0.1:30001-30002，也可以是url地址，去请求数据。
	// @gotags: default:"[]"
	FixedAddrs []string `protobuf:"bytes,2,rep,name=fixed_addrs,json=fixedAddrs,proto3" json:"fixed_addrs,omitempty" default:"[]"`
}

func (x *GetNode) Reset() {
	*x = GetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_v1_setting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNode) ProtoMessage() {}

func (x *GetNode) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_v1_setting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNode.ProtoReflect.Descriptor instead.
func (*GetNode) Descriptor() ([]byte, []int) {
	return file_proxy_v1_setting_proto_rawDescGZIP(), []int{3}
}

func (x *GetNode) GetGetMethod() GetNodeMethod {
	if x != nil {
		return x.GetMethod
	}
	return GetNodeMethod_NODE_GET_DEFAULT
}

func (x *GetNode) GetFixedAddrs() []string {
	if x != nil {
		return x.FixedAddrs
	}
	return nil
}

var File_proxy_v1_setting_proto protoreflect.FileDescriptor

var file_proxy_v1_setting_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x70, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x12, 0x35, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x59, 0x65, 0x73, 0x4f, 0x72, 0x4e, 0x6f, 0x52, 0x0b, 0x69, 0x73,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb5, 0x01, 0x0a,
	0x0b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x41, 0x0a, 0x0f,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52,
	0x0e, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x2c, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x82, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x70, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x09, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x2a, 0x57, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0x1a, 0x0a, 0x07, 0x59, 0x65, 0x73, 0x4f, 0x72, 0x4e,
	0x6f, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53,
	0x10, 0x01, 0x2a, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x02,
	0x42, 0x94, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76,
	0x31, 0x42, 0x0c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x02, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x2d, 0x67, 0x6f, 0x73, 0x74, 0x2f, 0x78, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x76, 0x31, 0xf8, 0x01, 0x00, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02,
	0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_v1_setting_proto_rawDescOnce sync.Once
	file_proxy_v1_setting_proto_rawDescData = file_proxy_v1_setting_proto_rawDesc
)

func file_proxy_v1_setting_proto_rawDescGZIP() []byte {
	file_proxy_v1_setting_proto_rawDescOnce.Do(func() {
		file_proxy_v1_setting_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_v1_setting_proto_rawDescData)
	})
	return file_proxy_v1_setting_proto_rawDescData
}

var file_proxy_v1_setting_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proxy_v1_setting_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proxy_v1_setting_proto_goTypes = []interface{}{
	(SettingType)(0),       // 0: proxy.v1.SettingType
	(YesOrNo)(0),           // 1: proxy.v1.YesOrNo
	(GetNodeMethod)(0),     // 2: proxy.v1.GetNodeMethod
	(*Setting)(nil),        // 3: proxy.v1.Setting
	(*SpecialConf)(nil),    // 4: proxy.v1.SpecialConf
	(*ReloadInterval)(nil), // 5: proxy.v1.ReloadInterval
	(*GetNode)(nil),        // 6: proxy.v1.GetNode
	(*UserAuth)(nil),       // 7: proxy.v1.UserAuth
}
var file_proxy_v1_setting_proto_depIdxs = []int32{
	0, // 0: proxy.v1.Setting.setting_type:type_name -> proxy.v1.SettingType
	1, // 1: proxy.v1.Setting.is_fixed_port:type_name -> proxy.v1.YesOrNo
	5, // 2: proxy.v1.SpecialConf.reload_interval:type_name -> proxy.v1.ReloadInterval
	6, // 3: proxy.v1.SpecialConf.get_node:type_name -> proxy.v1.GetNode
	7, // 4: proxy.v1.SpecialConf.default_user:type_name -> proxy.v1.UserAuth
	2, // 5: proxy.v1.GetNode.get_method:type_name -> proxy.v1.GetNodeMethod
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proxy_v1_setting_proto_init() }
func file_proxy_v1_setting_proto_init() {
	if File_proxy_v1_setting_proto != nil {
		return
	}
	file_proxy_v1_auth_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proxy_v1_setting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_v1_setting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_v1_setting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_v1_setting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_v1_setting_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy_v1_setting_proto_goTypes,
		DependencyIndexes: file_proxy_v1_setting_proto_depIdxs,
		EnumInfos:         file_proxy_v1_setting_proto_enumTypes,
		MessageInfos:      file_proxy_v1_setting_proto_msgTypes,
	}.Build()
	File_proxy_v1_setting_proto = out.File
	file_proxy_v1_setting_proto_rawDesc = nil
	file_proxy_v1_setting_proto_goTypes = nil
	file_proxy_v1_setting_proto_depIdxs = nil
}
